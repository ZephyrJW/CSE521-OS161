asst2 reading:
	/kern/syscall/loadelf.c : loading ELF(Excutable and Linkable Format) functions. From file system to virtual memory space.
	/kern/syscall/runprogram.c : function responsible for running program from the kernel menu. Base for writing -execv-.
	/kern/lib/uio.c : functions for moving data between kernel and user space. see also- /kern/vm/copyinout.c.  

	struct vnode is an abstract representation of file.	

	ENOEXEC: ERROR, NO EXEC #defined as 13

asst1 Q:

	vaddr_t == __u32 == uint32_t == unsigned int 
	off_t == __off_t == __i64 == long long
	size_t == __size_t == unsinged long
	Elf_Ehdr == Elf32_Ehdr: defined as a struct in kern/include/elf.h

1. magical number in ELF?
	in the elf file header.
	typedef struct {xxx} Elf32_Ehdr has: unsigned char e_ident[ELF_NIDENT]; //magic number et al

	iovcnt = 1, genrally shouldn't be a constant?


2. USERISPACE & USERSPACE & UIO_SYSSPACE 
	user process- code and data
	sysspace --> kernel

3. Where does memory read go?
	??

4. vfs_close before go to user mode ?
	because user mode never returns ?


